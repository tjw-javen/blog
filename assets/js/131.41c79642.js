(window.webpackJsonp=window.webpackJsonp||[]).push([[131],{575:function(e,t,a){"use strict";a.r(t);var n=a(54),s=Object(n.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"关于前端动画效果"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关于前端动画效果"}},[e._v("#")]),e._v(" 关于前端动画效果")]),e._v(" "),a("h3",{attrs:{id:"动画注意点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#动画注意点"}},[e._v("#")]),e._v(" 动画注意点")]),e._v(" "),a("p",[e._v("浏览器可以生成多个图层（普通文档流也是一个图层）。不同的图层渲染互不影响，所以对于需要频繁渲染的操作，最好单独生成一个新图层。")]),e._v(" "),a("p",[e._v("生成新图层的方式")]),e._v(" "),a("ul",[a("li",[e._v("will-change")]),e._v(" "),a("li",[e._v("3D 变换：translate3d、translateZ")]),e._v(" "),a("li",[e._v("通过动画实现的 opacity 动画转换")]),e._v(" "),a("li",[e._v("position: fixed")]),e._v(" "),a("li",[e._v("video、iframe 标签")])]),e._v(" "),a("h3",{attrs:{id:"requestanimateframe"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#requestanimateframe"}},[e._v("#")]),e._v(" requestAnimateFrame")]),e._v(" "),a("blockquote",[a("p",[e._v("window.requestAnimationFrame() 告诉浏览器——你希望执行一个动画，并且要求浏览器在下次重绘之前调用指定的回调函数更新动画")])]),e._v(" "),a("p",[e._v("回调函数执行次数通常与浏览器屏幕刷新次数相匹配，通常是每秒60次。")]),e._v(" "),a("p",[e._v("和setTimeout的区别")]),e._v(" "),a("ol",[a("li",[e._v("当requestAnimationFrame() 运行在后台标签页或者隐藏的"),a("code",[e._v("<iframe>")]),e._v(" 里时，requestAnimationFrame() 会被暂停调用以提升性能和电池寿命。(setTimeout不会停止)")]),e._v(" "),a("li",[e._v("跟着浏览器的绘制走，不会掉帧。（而setTimeout貌似是多个独立绘制。时间间隔不对一定会掉帧）")]),e._v(" "),a("li",[e._v("requestAnimationFrame有兼容性问题（当然：没办法时会降级成setTimeout）")])]),e._v(" "),a("p",[e._v("// 来自作者：FedFun 的兼容方案")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("if (!Date.now)\n    Date.now = function() { return new Date().getTime(); };\n \n(function() {\n    'use strict';\n    \n    var vendors = ['webkit', 'moz'];\n    for (var i = 0; i < vendors.length && !window.requestAnimationFrame; ++i) {\n        var vp = vendors[i];\n        window.requestAnimationFrame = window[vp+'RequestAnimationFrame'];\n        window.cancelAnimationFrame = (window[vp+'CancelAnimationFrame']\n                                   || window[vp+'CancelRequestAnimationFrame']);\n    }\n\n    if (/iP(ad|hone|od).*OS 6/.test(window.navigator.userAgent) // iOS6 is buggy\n        || !window.requestAnimationFrame || !window.cancelAnimationFrame) {\n        var lastTime = 0;\n        window.requestAnimationFrame = function(callback) {\n            var now = Date.now();\n            var nextTime = Math.max(lastTime + 16, now);\n            return setTimeout(function() { callback(lastTime = nextTime); },\n                              nextTime - now);\n        };\n        window.cancelAnimationFrame = clearTimeout;\n    }\n}());\n")])])]),a("h3",{attrs:{id:"ontransitionend"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ontransitionend"}},[e._v("#")]),e._v(" onTransitionEnd")]),e._v(" "),a("p",[e._v("做动画怎么能没有 "),a("code",[e._v("onTransitionEnd")]),e._v(" 呢？目前兼容性还可以，vue的动画就是通过这个做的。")]),e._v(" "),a("p",[e._v("监听：css样式 "),a("code",[e._v("transition")]),e._v(" 结束后触发")]),e._v(" "),a("h3",{attrs:{id:"屏幕滚动"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#屏幕滚动"}},[e._v("#")]),e._v(" 屏幕滚动")]),e._v(" "),a("ol",[a("li",[a("code",[e._v("window.scrollTo(0, 100)")])]),e._v(" "),a("li",[a("code",[e._v("document.body.scrollTop = 100")])]),e._v(" "),a("li",[a("code",[e._v("window.scrollBy(0, 100)")]),e._v(":相对滚动")])]),e._v(" "),a("p",[e._v("让元素显示在视窗")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("    let offsetTop = document.querySelector('.a').offsetTop;\n    window.scrollTo(0, offsetTop);\n")])])]),a("p",[e._v("使用锚点：但是在三大框架"),a("code",[e._v("HashRouter")]),e._v("中很不方便")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('    <a href="#a">元素出现在顶部</a>\n    <div id="a">aaa</div>\n')])])]),a("p",[e._v("利用"),a("code",[e._v("scrollIntoView")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('    document.querySelector(".a").scrollIntoView();\n    // 或\n    document.querySelector(".a").scrollIntoView({block: ["start" | "center" | "end"]});\n')])])]),a("p",[e._v("添加平滑动画效果：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('    // scrollTo scrollBy scrollIntoView \n    scrollTo({\n        behavior: "smooth"\n    })\n')])])]),a("h3",{attrs:{id:"解决-ios-自定义滚动条滚动不顺畅情况"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解决-ios-自定义滚动条滚动不顺畅情况"}},[e._v("#")]),e._v(" 解决 IOS 自定义滚动条滚动不顺畅情况")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("    .box {\n        -webkit-overflow-scrolling: touch;\n    }\n")])])])])}),[],!1,null,null,null);t.default=s.exports}}]);