(window.webpackJsonp=window.webpackJsonp||[]).push([[151],{601:function(v,_,t){"use strict";t.r(_);var e=t(54),i=Object(e.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h1",{attrs:{id:"git-使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git-使用"}},[v._v("#")]),v._v(" git 使用")]),v._v(" "),t("p",[v._v("Git是分布式版本控制系统")]),v._v(" "),t("h3",{attrs:{id:"常用命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#常用命令"}},[v._v("#")]),v._v(" 常用命令")]),v._v(" "),t("p",[v._v("代码暂存")]),v._v(" "),t("ul",[t("li",[v._v("代码暂存"),t("code",[v._v("git stash save 'message'")])]),v._v(" "),t("li",[v._v("恢复最新的进度到工作区"),t("code",[v._v("git stash pop [–index] [stash_id]")])]),v._v(" "),t("li",[v._v("删除所有存储的进度"),t("code",[v._v("git stash clear")])])]),v._v(" "),t("p",[v._v("克隆 "),t("code",[v._v("git clone http://xxx.git dirname")])]),v._v(" "),t("p",[v._v("fork代码到本地 "),t("code",[v._v("fork remote add https://xxx.git")])]),v._v(" "),t("p",[v._v("添加文件 "),t("code",[v._v("git add [ -a ]")])]),v._v(" "),t("p",[v._v("查看")]),v._v(" "),t("ul",[t("li",[v._v("查看分支 "),t("code",[v._v("git branch [ -a | -r ]")])]),v._v(" "),t("li",[v._v("查看状态 "),t("code",[v._v("git status")])]),v._v(" "),t("li",[v._v("查看远程代码地址 "),t("code",[v._v("git remote -v")])]),v._v(" "),t("li",[v._v("对比 "),t("code",[v._v("git diff")])])]),v._v(" "),t("p",[v._v("拉取")]),v._v(" "),t("ul",[t("li",[v._v("拉取远程代码 "),t("code",[v._v("git fetch [ --all ]")])]),v._v(" "),t("li",[v._v("拉取远程代码并合并 "),t("code",[v._v("git pull origin name")])])]),v._v(" "),t("p",[v._v("提交代码")]),v._v(" "),t("ul",[t("li",[v._v("提交到本地 "),t("code",[v._v("git commit -m 'remark'")])]),v._v(" "),t("li",[v._v("整理commit记录 "),t("code",[v._v("git rebase branch")])]),v._v(" "),t("li",[v._v("提交到远程 "),t("code",[v._v("git push origin name")])]),v._v(" "),t("li",[v._v("合并分支 "),t("code",[v._v("git merge branch")])])]),v._v(" "),t("p",[v._v("创建子分支 "),t("code",[v._v("git checkout -b name")])]),v._v(" "),t("p",[v._v("删除分支")]),v._v(" "),t("ul",[t("li",[v._v("删除本地分支 "),t("code",[v._v("git branch -d name")])]),v._v(" "),t("li",[v._v("删除远程分支 "),t("code",[v._v("git push origin --delete name")])]),v._v(" "),t("li",[v._v("删除本地可见但远程已经删除的分支 "),t("code",[v._v("git remote prune origin")])])]),v._v(" "),t("p",[v._v("同步fork代码")]),v._v(" "),t("ol",[t("li",[t("code",[v._v("git fetch upstream")])]),v._v(" "),t("li",[t("code",[v._v("git checkout master")])]),v._v(" "),t("li",[t("code",[v._v("git merge upstream/master")])]),v._v(" "),t("li",[t("code",[v._v("git push")])])]),v._v(" "),t("p",[v._v("回撤提交 "),t("code",[v._v("git revert HEAD")])]),v._v(" "),t("p",[v._v("回滚到特定版本")]),v._v(" "),t("ul",[t("li",[t("code",[v._v("git reset --hard 5dc29bebe8")]),v._v(" "),t("ul",[t("li",[v._v("有多个选项[soft、mixed、hard]")]),v._v(" "),t("li",[v._v("hard = mixed + revert")])])]),v._v(" "),t("li",[v._v("回滚完成后只是在本地reset，需要覆盖远程节点")]),v._v(" "),t("li",[t("code",[v._v("git push --force")]),v._v(" 强制push")])]),v._v(" "),t("p",[v._v("修补commit（用于代码提交错分支的情况）")]),v._v(" "),t("ul",[t("li",[v._v("生成最近的4次（^数量）commit的patch "),t("code",[v._v("git format-patch HEAD^^^^")])]),v._v(" "),t("li",[v._v("检查patch：如果没有任何输出，则说明无冲突"),t("code",[v._v("git apply --check 某提交.patch")])]),v._v(" "),t("li",[v._v('将名字为 "某提交.patch" 的patch打上'),t("code",[v._v("git am 某提交.patch")])])])])}),[],!1,null,null,null);_.default=i.exports}}]);